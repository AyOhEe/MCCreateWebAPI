openapi: 3.1.0
info:
  title: "Create + CC: Tweaked Web Interface API Description"
  version: 0.0.3
paths:
  /accesspoint/create:
    get:
      summary: Get a completely new MID (Machine ID).
      description: Sends a new MID, which will be visible in the AP Control Panel. Use when setting up a new computer or turtle.
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: string
                description: Machine ID (32-bit hexadecimal value).
                minLength: 8
                maxLength: 8
                example: "1a2b3c4d"

  /accesspoint/edit:
    post:
      summary: Replaces the current details of the given MID with those provided.
      description: Replaces the details of the provided MID with those provided in the request body. Only provided values will be updated, all others will be left unchanged. Unused values will be ignored.
      responses:
        "200":
          description: ok
        "400":
          description: bad request
        "404":
          description: MID not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Machine ID (32-bit hexadecimal value).
                  minLength: 8
                  maxLength: 8
                  example: "1a2b3c4d"
                new_details:
                  type: object

  /accesspoint/remove:
    post:
      summary: Removes the record of the MID
      description: The access-point will be removed from the system and from its group.
      responses:
        "200":
          description: ok
        "400":
          description: bad request
        "404":
          description: MID not found
      requestBody:
        content:
          application/json:
            schema:
              type: string
              minLength: 8
              maxLength: 8

  /accesspoint/list:
    get:
      summary: Get a list of all AP and their configuration data.
      description: Sends a list of every acccess-point (computer, turtle) on record.
      responses:
        "200":
          description: ok
          content:
            application/json:
              type: object
              schema:
                description: Access-points.
                patternProperties:
                  "[0-9a-f]{8}":
                    type: object
                    properties:
                      ap_type:
                        type: string
                        description: The type of access-point.
                        enum: ["computer", "turtle"]
                      group:
                        type: string
                        description: This AP's content group identifier.
                      config:
                        type: object
                        description: Configuration data.
                example:
                  1a2b3c4d:
                    ap_type: computer
                    group: foundry
                    config:
                      update_interval: 30
                      update_delay: 17

  /inventory/total_contents:
    get:
      summary: Gets the combined contents of every access-point, grouped by resource.
      description: Sums up every resource visible to every active access-point, and provides a full breakdown (by resource, by group) of where the resource is stored.
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: object
                description: Resources, by in-game identifier.
                items:
                  type: object
                  description: A class of items in storage.
                  properties:
                    tags:
                      type: array
                      description: The tags used to group this item with other similar items.
                      items:
                        type: string
                    stored:
                      type: integer
                      description: The total amount of the item held in storage across the world.
                    breakdown:
                      type: object
                      description: The amount of the item stored in each group. Groups with none of this item are omitte
                example:
                  "minecraft:iron_ingot":
                    tags: ["Metal", "Intermediate"]
                    stored: 43680
                    breakdown:
                      foundry: 42170
                      spawn_drawers: 1510

  /inventory/group_contents:
    get:
      summary: Gets the combined contents of every access-point, grouped by inventory group.
      description: Returns the resources available to each group, and provides a full breakdown (by resource, by access-point) of where the resource is stored.
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: object
                description: Groups, by identifier
                items:
                  type: object
                  description: Resources, by in-game identifier.
                  items:
                    type: object
                    description: A class of items in storage.
                    properties:
                      tags:
                        type: array
                        description: The tags used to group this item with other similar items.
                        items:
                          type: string
                      stored:
                        type: integer
                        description: The total amount of the item held in storage by the group.
                        minValue: 0
                      breakdown:
                        type: object
                        description: The amount of the item stored in each access-point. APs with none of this item are omitted.
                example:
                  foundry:
                    "minecraft:iron_ingot":
                      tags: [ "Metal", "Intermediate" ]
                      stored: 2000
                      breakdown:
                        1a2b3c4d: 1500
                        5d6c7b8a: 500

  /inventory/accesspoint_contents:
    get:
      summary: Gets the contents visible to a given access-point, by in-game identifier.
      description: Returns the resources available to the access-point.
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: object
                description: Resources, by in-game identifier.
                items:
                  type: object
                  description: A class of items in storage.
                  properties:
                    tags:
                      type: array
                      description: The tags used to group this item with other similar items.
                      items:
                        type: string
                    stored:
                      type: integer
                      description: The total amount of the item held in storage by the access-point.
                      minValue: 0
                example:
                  "minecraft:iron_ingot":
                    tags: [ "Metal", "Intermediate" ]
                    stored: 1500
        "400":
          description: bad request
        "404":
          description: MID not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Machine ID (32-bit hexadecimal value).
                  minLength: 8
                  maxLength: 8
                  example: "1a2b3c4d"

  /group/create:
    post:
      summary: Creates a new, empty group of access-points
      description: Creates a new group that access-points can be assigned to.
      responses:
        "200":
          description: ok
        "400":
          description: bad request
        "403":
          description: group identifier already exists
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Group identifier
                  example: "foundry"

  /group/edit:
    post:
      summary: Replaces the current details of the given group with those provided.
      description: Replaces the details of the provided group with those provided in the request body. Only provided values will be updated, all others will be left unchanged.
      responses:
        "200":
          description: ok
        "400":
          description: bad request
        "404":
          description: group identifier not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                details:
                  type: object
                name:
                  type: string
                  description: Group identifier
                  example: "foundry"

  /group/remove:
    post:
      summary: Schedules the group for removal.
      description: Marks the group for deletion in 24 hours. Members of a deleted group are left assigned to no group. Marks an alert at the header of all pages.
      responses:
        "200":
          description: ok
        "400":
          description: bad request
        "404":
          description: group identifier not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Group identifier
                  example: "foundry"

  /group/list:
    get:
      summary: Returns the identifiers of all groups
      description: Returns a list containing the group identifier of every group stored on record
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                description: Group identifiers
                items:
                  type: string
                example: ["foundry", "spawn", "secondary production"]

  /group/list_members:
    get:
      summary: Returns all members of the asked group.
      description: Returns an object containing every access-point assigned to the requested group.
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: object
                description: Access-points
                properties:
                  ap_type:
                    type: string
                    description: The type of access-point.
                    enum: [ "computer", "turtle" ]
                  group:
                    type: string
                    description: This AP's content group identifier.
                  config:
                    type: object
                    description: Configuration data.
                example:
                  1a2b3c4d:
                    ap_type: computer
                    group: foundry
                    config:
                      update_interval: 30
                      update_delay: 17

        "400":
          description: bad request
        "404":
          description: group identifier not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Group identifier
                  example: "foundry"

  /itemprofile/sprite:
    get:
      summary: Returns a .png of either the requested item or a default placeholder.
      description: Attempts to look up the requested identifier. If found, and if a sprite is specified, it is returned. Otherwise a default is provided.
      responses:
        "200":
          description: ok
          content:
            image/png:
              description: The item's sprite, or a default sprite if no sprite is on record.
        "400":
          description: bad request
        "404":
          description: item identifier not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Item identifier (in-game)
                  example: "minecraft:iron_ingot"

  /itemprofile/create:
    post:
      summary: Creates an item profile with the provided values.
      description: Creates an item profile with the provided values. Values not included are set to defaults.
      responses:
        "200":
          description: ok
        "403":
          description: item profile already exists
      requestBody:
        content:
          application/json:
          schema:
            type: object
              properties:
                name:
                  type: string
                  description: Item identifier (in-game)
                  example: "minecraft:iron_ingot"

  /itemprofile/edit:
    post:
      summary: Replaces the current details of the given item profile with those provided.
      description: Replaces the details of the provided item profile with those provided in the request body. Only provided values will be updated, all others will be left unchanged.
      responses:
        "200":
          description: ok
        "400":
          description: bad request
        "404":
          description: item identifier not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                details:
                  type: object
                name:
                  type: string
                  description: Item identifier (in-game)
                  example: "minecraft:iron_ingot"

  /itemprofile/remove:
    post:
      summary: Removes the item profile.
      description: Removes the item profile from storage.
      responses:
        "200":
          description: ok
        "400":
          description: bad request
        "404":
          description: item identifier not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Item identifier (in-game)
                  example: "minecraft:iron_ingot"

  /itemprofile/list:
    get:
      summary: Returns every item profile.
      description: Returns an object containing every item profile, by in-game identifier.
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: object
                description: Item profiles.
                items:
                  type: object
                  properties:
                    common_name:
                      type: string
                      description: The in-game name for the item, or an otherwise recognisable name
                    tags:
                      type: array
                      description: The tags used to group this item with other similar items.
                example:
                  "minecraft:iron_ingot":
                    common_name: "Iron Ingot"
                    tags: ["Metal", "Intermediate"]